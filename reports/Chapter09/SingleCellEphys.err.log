Traceback (most recent call last):
  File "/opt/miniconda3/envs/jb_py311/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/opt/miniconda3/envs/jb_py311/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/miniconda3/envs/jb_py311/lib/python3.11/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/miniconda3/envs/jb_py311/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/miniconda3/envs/jb_py311/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/opt/miniconda3/envs/jb_py311/lib/python3.11/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/miniconda3/envs/jb_py311/lib/python3.11/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/miniconda3/envs/jb_py311/lib/python3.11/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Enter your cell_id below
cell_id = ...

# Get the electrophysiology (ephys) data for that cell
data = ctc.get_ephys_data(cell_id)
print('Data retrieved')
------------------


[31m---------------------------------------------------------------------------[39m
[31mTypeError[39m                                 Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[5][39m[32m, line 5[39m
[32m      2[39m cell_id = ...
[32m      4[39m [38;5;66;03m# Get the electrophysiology (ephys) data for that cell[39;00m
[32m----> [39m[32m5[39m data = [43mctc[49m[43m.[49m[43mget_ephys_data[49m[43m([49m[43mcell_id[49m[43m)[49m
[32m      6[39m [38;5;28mprint[39m([33m'[39m[33mData retrieved[39m[33m'[39m)

[36mFile [39m[32m/opt/miniconda3/envs/jb_py311/lib/python3.11/site-packages/allensdk/core/cell_types_cache.py:299[39m, in [36mCellTypesCache.get_ephys_data[39m[34m(self, specimen_id, file_name)[39m
[32m    276[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mget_ephys_data[39m([38;5;28mself[39m, specimen_id, file_name=[38;5;28;01mNone[39;00m):
[32m    277[39m [38;5;250m    [39m[33;03m"""[39;00m
[32m    278[39m [33;03m    Download electrophysiology traces for a single cell in the database.[39;00m
[32m    279[39m 
[32m   (...)[39m[32m    296[39m [33;03m        and response traces out of an NWB file.[39;00m
[32m    297[39m [33;03m    """[39;00m
[32m--> [39m[32m299[39m     file_name = [38;5;28;43mself[39;49m[43m.[49m[43mget_cache_path[49m[43m([49m
[32m    300[39m [43m        [49m[43mfile_name[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[43m.[49m[43mEPHYS_DATA_KEY[49m[43m,[49m[43m [49m[43mspecimen_id[49m[43m)[49m
[32m    302[39m     [38;5;28mself[39m.api.save_ephys_data(specimen_id, file_name, strategy=[33m'[39m[33mlazy[39m[33m'[39m)
[32m    304[39m     [38;5;28;01mreturn[39;00m NwbDataSet(file_name)

[36mFile [39m[32m/opt/miniconda3/envs/jb_py311/lib/python3.11/site-packages/allensdk/api/warehouse_cache/cache.py:125[39m, in [36mCache.get_cache_path[39m[34m(self, file_name, manifest_key, *args)[39m
[32m    123[39m         [38;5;28;01mreturn[39;00m file_name
[32m    124[39m     [38;5;28;01melif[39;00m [38;5;28mself[39m.manifest:
[32m--> [39m[32m125[39m         [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[43m.[49m[43mmanifest[49m[43m.[49m[43mget_path[49m[43m([49m[43mmanifest_key[49m[43m,[49m[43m [49m[43m*[49m[43margs[49m[43m)[49m
[32m    127[39m [38;5;28;01mreturn[39;00m [38;5;28;01mNone[39;00m

[36mFile [39m[32m/opt/miniconda3/envs/jb_py311/lib/python3.11/site-packages/allensdk/config/manifest.py:263[39m, in [36mManifest.get_path[39m[34m(self, path_key, *args)[39m
[32m    260[39m path_spec = [38;5;28mself[39m.path_info[path_key][[33m'[39m[33mspec[39m[33m'[39m]
[32m    262[39m [38;5;28;01mif[39;00m args [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m [38;5;129;01mand[39;00m [38;5;28mlen[39m(args) != [32m0[39m:
[32m--> [39m[32m263[39m     path = [43mpath_spec[49m[43m [49m[43m%[49m[43m [49m[43margs[49m
[32m    264[39m [38;5;28;01melse[39;00m:
[32m    265[39m     path = path_spec

[31mTypeError[39m: %d format: a real number is required, not ellipsis

